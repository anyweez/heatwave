package com.lukesegars.heatwave;

import android.content.ContentValues;

public class Wave {
	public static final int SECONDS_PER_UNIT = 86400;
	
	private int wave_id;
	private String name;
	private int wave_length;
	
	private HeatwaveDatabase db;
	
	public Wave(String n, int wl) {
		name = n;
		wave_length = wl;
	}
	
	public Wave(String n, int wl, int wid) {
		name = n;
		wave_length = wl;
		wave_id = wid;
	}
	
	public int getId() {
		return wave_id;
	}
	
	public String getName() {
		return name;
	}
	
	public int getWaveLength() {
		return wave_length;
	}
	
	public void setName(String n) {
		name = n;
	}
	
	public void setWaveLength(int wl) {
		wave_length = wl;
	}
	
	public ContentValues cv() {
		ContentValues cv = new ContentValues();
		
		cv.put("name", name);
		cv.put("wavelength", wave_length);
		
		return cv;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + wave_length;
		return result;
	}

	/**
	 * Automatically generated by Eclipse (woohoo!)
	 * 
	 * Checks to ensure that objects are valid and pointers to fields
	 * are valid before comparing values.  If the two waves have the
	 * same WAVE_LENGTH and NAME then they will be declared as "equal."
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		
		Wave other = (Wave) obj;
		
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (wave_length != other.wave_length)
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Wave '" + name + "', wavelength: " + String.valueOf(wave_length);
	}
}
